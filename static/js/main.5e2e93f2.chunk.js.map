{"version":3,"sources":["components/DateCal/index.js","App.js","reportWebVitals.js","index.js"],"names":["FORMATE","WEEK_DAY","useStyles","makeStyles","theme","root","item","display","justifyContent","alignItems","borderBottom","padding","DateCal","classes","useState","dayjs","set","toDate","selectedDate","setSelectedDate","dateList","setDateList","getDayOfWeek","date","day","console","log","utils","DateFnsUtils","DateTimePicker","margin","id","label","format","value","onChange","KeyboardButtonProps","map","d","currDate","nyDate","subtract","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAMMA,EAAU,mBACVC,EAAW,CACf,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,SACH,EAAG,UAGCC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GACNC,KAAM,CACJC,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,aAAc,iBACdC,QAAS,cAGE,SAASC,IACtB,IAAMC,EAAUX,IAChB,EAAwCY,mBAASC,MAAQC,IAAI,OAAQ,GAAGA,IAAI,SAAU,GAAGC,UAAzF,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCL,mBAAS,IAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAOMC,EAAe,SAACC,GACpB,MAAO,SAAMtB,EAASc,IAAMQ,GAAMC,QAIpC,OADAC,QAAQC,IAAI,gBAAiBR,GAE3B,gCACE,cAAC,IAAD,CAAyBS,MAAOC,IAAhC,SACE,cAACC,EAAA,EAAD,CACEC,OAAO,SACPC,GAAG,qBACHC,MAAM,2BACNC,OAAO,mBACPC,MAAOhB,EACPiB,SAnBiB,SAACZ,GACxBJ,EAAgBI,GAChBF,EAAY,GAAD,mBAAKD,GAAL,CAAeG,MAkBpBa,oBAAqB,CACnB,aAAc,mBAInBhB,EAASiB,KAAI,SAACC,GACb,IAAMC,EAAWD,EACXE,EAASzB,IAAMwB,GAAUE,SAAS,GAAI,QAE5C,OACE,sBAAKC,UAAS,oBAAe7B,EAAQP,MAArC,UACE,gCACE,4DACA,gCACGgB,EAAaiB,GADhB,IAC4BxB,IAAMwB,GAAUN,OAAOjC,SAGrD,gCACE,4DACA,gCACGsB,EAAakB,GADhB,IAC0BA,EAAOP,OAAOjC,kB,MC5DvC2C,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,cAAC9B,EAAD,OCKSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e2e93f2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport dayjs from 'dayjs';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, DateTimePicker } from '@material-ui/pickers';\n\nconst FORMATE = 'YYYY/MM/DD HH:mm';\nconst WEEK_DAY = {\n  1: '一',\n  2: '二',\n  3: '三',\n  4: '四',\n  5: '五',\n  6: '六',\n  0: '日',\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  item: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    borderBottom: '1px solid #ccc',\n    padding: '20px 0',\n  },\n}));\nexport default function DateCal() {\n  const classes = useStyles();\n  const [selectedDate, setSelectedDate] = useState(dayjs().set('hour', 8).set('minute', 0).toDate());\n  const [dateList, setDateList] = useState([]);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setDateList([...dateList, date]);\n  };\n\n  const getDayOfWeek = (date) => {\n    return '周' + WEEK_DAY[dayjs(date).day()];\n  };\n\n  console.log('selectedDate:', selectedDate);\n  return (\n    <div>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <DateTimePicker\n          margin='normal'\n          id='date-picker-dialog'\n          label='选个时间'\n          format='yyyy/MM/dd HH:mm'\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n        />\n      </MuiPickersUtilsProvider>\n      {dateList.map((d) => {\n        const currDate = d;\n        const nyDate = dayjs(currDate).subtract(12, 'hour');\n\n        return (\n          <div className={`date-item ${classes.item}`}>\n            <div>\n              <h3>北京时间: </h3>\n              <div>\n                {getDayOfWeek(currDate)} {dayjs(currDate).format(FORMATE)}\n              </div>\n            </div>\n            <div>\n              <h3>纽约时间: </h3>\n              <div>\n                {getDayOfWeek(nyDate)} {nyDate.format(FORMATE)}\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import DateCal from './components/DateCal';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <DateCal />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}